/*
 * File: app/controller/AccountBalance.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('FP.controller.AccountBalance', {
    extend: 'Ext.app.Controller',

    config: {
        routes: {
            'accountBalance': 'showAccountBalance'
        },

        control: {
            "container#accountBalance": {
                show: 'onAccountBalanceShow'
            },
            "list#accountBalance": {
                deactivate: 'onAccountBalanceDeactivate',
                initialize: 'onAccountBalanceInitialize',
                activate: 'onAccountBalanceActivate'
            }
        }
    },

    onAccountBalanceShow: function(component, eOpts) {
        var store = Ext.getStore('accountBalance'),
            records = store.data.items,
            balanceDisplay = Ext.ComponentQuery.query('#balanceDisplay')[0],
            total = FP.app.calculateBalance(),
            display = Math.abs(total).toFixed(2);

        balanceDisplay.setHtml(this.displayBalance(total, display));


    },

    onAccountBalanceDeactivate: function(oldActiveItem, container, newActiveItem, eOpts) {
        var main = Ext.getCmp('main');

        main.query('#accountInfo')[0].hide();
    },

    onAccountBalanceInitialize: function(component, eOpts) {
        var main = Ext.getCmp('main'),
            accountMenu = main.query('#accountMenu')[0];

        //accountMenu.hide();

        component.setScrollable({ directionLock: true, scroll: 'vertical' });

        // List spacer for bottom toolbar.
        component.add({xtype:'component', height:40, scrollDock: 'bottom'});
    },

    onAccountBalanceActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        Ext.ComponentQuery.query('#accountInfo')[0].show();
    },

    showAccountBalance: function() {
        var main = Ext.getCmp('main'),
            accountBalance = Ext.create('FP.view.AccountBalance'),
            back = main.query('#back')[0],
            runtime = FP.config.Runtime,
            toolbar = main.query('#toolbar')[0],
            record = runtime.getUserAccount(),
            accountName = main.query('#accountName')[0];


        back.view = '#accountBalance';

        toolbar.setTitle(record.name);

        var store = Ext.getStore('accountBalance');
        store.clearFilter();
        store.filter('userAccount_id', record.id, false, true);


        accountName.setHtml('<b>'+record.name+'</b>');
        main.setActiveItem(accountBalance);
    },

    displayBalance: function(total, display) {
        if(total < 0) {
            return 'Balance: <span class="negative">($'+display+')</span>';
        } else if(total > 0) {
            return 'Balance: <span class="positive">$'+display+'</span>';
        } else if(total === 0) {
            return 'Balance: <span class="zero">$'+display+'</span>';
        }
    }

});