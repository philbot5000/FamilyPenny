{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "AccountForm"
    },
    "designerId": "6fbcda8a-ee79-4752-b45f-6775c527fa37",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onAccountFormShow",
                "implHandler": [
                    "/*component.on('hide', function() {",
                    "setTimeout(function() {",
                    "component.destroy();",
                    "}, 1000);",
                    "});*/"
                ],
                "name": "show",
                "designer|targetType": "Ext.form.Panel",
                "designer|controlQuery": "formpanel#accountForm"
            },
            "designerId": "60db6978-1a6e-409d-9eaf-8cc41eca7435"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "url": "accountForm",
                "fn": "showAccountForm",
                "implHandler": [
                    "var main = Ext.getCmp('main'),",
                    "    addUser = Ext.create('FP.view.AccountForm'),",
                    "    back = main.query('#back')[0],",
                    "    menuButton = main.query('#menuButton')[0],",
                    "    editButton = main.query('#editUser')[0],",
                    "    addUserButton = main.query('#addUser')[0];",
                    "",
                    "",
                    "addUserButton.hide();",
                    "back.view = '#accountForm';",
                    "back.show();",
                    "menuButton.hide();",
                    "main.query('#accountMenu')[0].hide();",
                    "",
                    "",
                    "main.setActiveItem(addUser);"
                ]
            },
            "designerId": "6a092bdb-6d75-406c-bafa-0b0967367a3a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onSubmitUserTap",
                "implHandler": [
                    "var account = Ext.ComponentQuery.query('#accountForm')[0],",
                    "    accountValues = account.getValues(),",
                    "/*    store = Ext.getStore('accounts'), */",
                    "    model = Ext.create('FP.model.Account', accountValues), ",
                    "    errorMessage,",
                    "    errors = model.validate();",
                    "",
                    "",
                    "// EDIT USER ...",
                    "if(account.edit) {",
                    "    // get record in local storage and set new values and sync...",
                    "    this.updateUser(accountValues);   ",
                    "",
                    "",
                    "} else {",
                    "",
                    "    // Input Validation ...",
                    "    if(!errors.isValid()) {",
                    "        errors.each(function(err) {",
                    "            errorMessage += err.getMessage() + '\\n ';",
                    "        });",
                    "",
                    "        alert(errorMessage);",
                    "",
                    "    } else {",
                    "        // CREATE NEW USER ...",
                    "        this.createUser(accountValues);",
                    "        FP.app.redirectTo('accounts');",
                    "",
                    "    }",
                    "}"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "button#submitUser"
            },
            "designerId": "ee3b6473-957f-4e82-81b4-d6a4252cf312"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "url": "accountForm/edit",
                "fn": "showAccountFormEdit",
                "implHandler": [
                    "var main = Ext.getCmp('main'),",
                    "    editUser = Ext.create('FP.view.AccountForm'),",
                    "    back = main.query('#back')[0],",
                    "    menuButton = main.query('#menuButton')[0],",
                    "    addUserButton = main.query('#addUser')[0],",
                    "    editUserButton = main.query('#editUser')[0],",
                    "    runtime = FP.config.Runtime,",
                    "    fieldSet = editUser.getComponent('accountField'),",
                    "    userValues = runtime.getAccount();",
                    "",
                    "fieldSet.setTitle('Edit User');",
                    "",
                    "editUser.edit = true;",
                    "main.query('#accountMenu')[0].hide();",
                    "editUser.setValues(userValues);",
                    "",
                    "editUserButton.show();",
                    "addUserButton.hide();",
                    "back.hide();",
                    "menuButton.hide();",
                    "",
                    "main.setActiveItem(editUser);"
                ]
            },
            "designerId": "186dba82-43e3-44dc-befb-ad625dbe14b2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onDeleteUserTap",
                "implHandler": [
                    "this.deleteUser();"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "button#deleteUser"
            },
            "designerId": "1504ec95-02de-4f24-a496-0bec5ce713a7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onTakeImageButtonTap",
                "implHandler": [
                    "//console.log(FP.app.takePicture());",
                    "//Ext.ComponentQuery.query('#image')[0].setValue('hey');",
                    "",
                    "/****",
                    "* Phonegap specific code",
                    "* Camera Capture",
                    "*",
                    "***/",
                    "var me = this;",
                    "var settings = {",
                    "    quality: 90,",
                    "    sourceType : Camera.PictureSourceType.PHOTOLIBRARY,",
                    "    encodingType: Camera.EncodingType.JPEG,",
                    "    destinationType: Camera.DestinationType.DATA_URL,",
                    "    saveToPhotoAlbum: false,",
                    "    allowEdit : true,",
                    "    targetWidth: 350,",
                    "    targetHeight: 350,",
                    "    correctOrientation: true",
                    "};",
                    "",
                    "",
                    "navigator.camera.getPicture(onSuccess, onFail, settings);",
                    "",
                    "function onSuccess(imageData) {",
                    "",
                    "    //console.log(imageData);",
                    "    console.log(Ext.ComponentQuery.query('#image')[0]);",
                    "    Ext.ComponentQuery.query('#image')[0].setValue('data:image/jpeg;base64,'+imageData);",
                    "",
                    "}",
                    "",
                    "function onFail(message) {",
                    "    //alert('Failed because: ' + message);",
                    "    //dataview.show();",
                    "}"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "button#takeImageButton"
            },
            "designerId": "6c84c256-e9e0-463a-a5a3-38ded3421e77"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "createUser",
                "designer|params": [
                    "accountValues"
                ],
                "implHandler": [
                    "var store = Ext.getStore('accounts'),",
                    "    model = Ext.create('FP.model.Account', accountValues);",
                    "",
                    "",
                    "/* TODO: don't allow local save unless user can save to parse: ",
                    "*  - How should we handle local save and sync when user is offline?.",
                    "*  - It would be easier to always save to parse",
                    "**/",
                    "",
                    "",
                    "/* Parse */",
                    "",
                    "var ParseAccount = Parse.Object.extend(\"Account\");",
                    "var pAccount = new ParseAccount();",
                    "",
                    "pAccount.set(\"id\", accountValues.id);",
                    "pAccount.set(\"firstName\", accountValues.firstName);",
                    "pAccount.set(\"lastName\", accountValues.lastName);",
                    "pAccount.set(\"email\", accountValues.email);",
                    "pAccount.set(\"accountType\", accountValues.accountType);",
                    "pAccount.set(\"summaryType\", accountValues.summaryType);",
                    "pAccount.set(\"accounts\", 0);",
                    "//pAccount.set(\"\", accountValues);",
                    "",
                    "pAccount.save(null, {",
                    "    success: function(result) {",
                    "        // For now only create account locally after user has been successfully saved",
                    "        // to Parse",
                    "        ",
                    "        model.set('accounts', 0);",
                    "        var sModel = store.add(model);       ",
                    "        console.log(sModel[0].data.id);",
                    "        ",
                    "        result.set('localId', sModel[0].data.id);",
                    "        result.save();",
                    "        ",
                    "        store.sync();",
                    "        ",
                    "        FP.app.redirectTo('accounts');",
                    "        ",
                    "    },",
                    "    error: function(result, error) {",
                    "        // Execute any logic that should take place if the save fails.",
                    "        // error is a Parse.Error with an error code and description.",
                    "        alert('Failed to create new object, with error code: ' + error.description);",
                    "    }",
                    "});"
                ]
            },
            "designerId": "7470cbe4-b411-4198-bfa4-5b6c6b2d7d3e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateUser",
                "designer|params": [
                    "accountValues"
                ],
                "implHandler": [
                    "var id = FP.config.Runtime.getAccount().id,",
                    "    store = Ext.getStore('accounts'),",
                    "    index = store.findExact('id', id),",
                    "    record = store.getAt(index);",
                    "",
                    "/* Parse.com */",
                    "",
                    "var Account = Parse.Object.extend(\"Account\");",
                    "var query = new Parse.Query(Account);",
                    "query.equalTo(\"localId\", id);",
                    "query.find({",
                    "    success: function(results) {",
                    "        // should only ever be 1 record...",
                    "        var parseRecord = results[0];",
                    "",
                    "        /* Local */",
                    "        record.set('firstName', accountValues.firstName);",
                    "        record.set('lastName', accountValues.lastName);",
                    "        record.set('email', accountValues.email);",
                    "        record.set('accountType', accountValues.accountType);",
                    "        record.set('summaryType', accountValues.summaryType);",
                    "        store.sync();",
                    "",
                    "        /* Parse */",
                    "        parseRecord.set('firstName', accountValues.firstName);",
                    "        parseRecord.set('lastName', accountValues.lastName);",
                    "        parseRecord.set('email', accountValues.email);",
                    "        parseRecord.set('accountType', accountValues.accountType);",
                    "        parseRecord.set('summaryType', accountValues.summaryType);",
                    "        parseRecord.save();",
                    "",
                    "        FP.app.redirectTo('accounts');",
                    "    },",
                    "    error: function(error) {",
                    "        alert(\"Error: \" + error.code + \" \" + error.message);",
                    "    }",
                    "});",
                    "",
                    ""
                ]
            },
            "designerId": "f324fe01-417c-45d3-8818-be5dc32b0db7"
        }
    ]
}