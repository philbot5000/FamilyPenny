/*
 * File: app/view/AccountBalanceForm.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('FP.view.AccountBalanceForm', {
    extend: 'Ext.form.Panel',

    requires: [
        'Ext.ux.field.DateTimePicker'
    ],

    config: {
        itemId: 'accountBalanceForm',
        items: [
            {
                xtype: 'fieldset',
                title: 'New One-Time Transaction',
                items: [
                    {
                        xtype: 'selectfield',
                        itemId: 'account',
                        name: 'account',
                        placeHolder: 'Select Account',
                        autoSelect: false,
                        displayField: 'name',
                        store: 'userAccounts',
                        valueField: 'id'
                    },
                    {
                        xtype: 'selectfield',
                        hidden: true,
                        itemId: 'category',
                        name: 'category',
                        placeHolder: 'Category'
                    },
                    {
                        xtype: 'textfield',
                        itemId: 'description',
                        name: 'description',
                        autoCapitalize: true,
                        placeHolder: 'Description'
                    },
                    {
                        xtype: 'container',
                        height: 50,
                        hidden: true,
                        itemId: 'categoryContainer',
                        layout: {
                            align: 'center',
                            type: 'hbox'
                        },
                        items: [
                            {
                                xtype: 'button',
                                height: 38,
                                itemId: 'addCategory',
                                margin: '0 5 0 5',
                                style: 'border-radius: 40px;',
                                styleHtmlContent: true,
                                ui: 'round',
                                width: 38,
                                iconAlign: 'center',
                                iconCls: 'add',
                                text: ''
                            }
                        ]
                    },
                    {
                        xtype: 'numberfield',
                        itemId: 'amount',
                        name: 'amount',
                        placeHolder: '$0.00'
                    },
                    {
                        xtype: 'container',
                        height: 50,
                        itemId: 'dateTimeContainer',
                        listeners: [
                            {
                                fn: function(component, eOpts) {
                                    component.add({
                                        xtype: 'datetimepickerfield',
                                        name: 'date',
                                        placeHolder: 'Date',
                                        ampm: true,
                                        slotOrder: ['month', 'day'],
                                        value: new Date()
                                    });
                                },
                                event: 'initialize'
                            }
                        ]
                    },
                    {
                        xtype: 'textfield',
                        hidden: true,
                        itemId: 'date',
                        placeHolder: 'Date'
                    },
                    {
                        xtype: 'hiddenfield',
                        itemId: 'userAccount_id',
                        name: 'userAccount_id'
                    },
                    {
                        xtype: 'container',
                        padding: 20,
                        layout: {
                            pack: 'center',
                            type: 'hbox'
                        },
                        items: [
                            {
                                xtype: 'button',
                                itemId: 'addTransaction',
                                ui: 'confirm',
                                iconCls: 'compose',
                                text: 'Save Transaction'
                            }
                        ]
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onAccountChange',
                event: 'change',
                delegate: '#account'
            },
            {
                fn: 'onDateFocus',
                event: 'focus',
                delegate: '#date'
            },
            {
                fn: 'onAccountBalanceFormActivate',
                event: 'activate'
            },
            {
                fn: 'onAccountBalanceFormDeactivate',
                event: 'deactivate'
            }
        ]
    },

    onAccountChange: function(selectfield, newValue, oldValue, eOpts) {
        var hidden = Ext.ComponentQuery.query('#userAccount_id')[0],
            store = Ext.getStore('userAccounts'),
            index = store.findExact('id', newValue),
            record = store.getAt(index);


        FP.config.Runtime.setUserAccount(record.data);

        hidden.setValue(newValue);


        // find exact userAccount with id... set userAccount() in runtime
        console.log(newValue);
    },

    onDateFocus: function(textfield, e, eOpts) {
        var picker = Ext.create('FP.view.DateTime');
        textfield.blur();
        picker.show();
    },

    onAccountBalanceFormActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        var main = Ext.getCmp('main');

        main.query('#back')[0].hide();
        main.query('#editUser')[0].setText('Cancel');
    },

    onAccountBalanceFormDeactivate: function(oldActiveItem, container, newActiveItem, eOpts) {
        var main = Ext.getCmp('main');

        main.query('#editUser')[0].setText('Edit');
        main.query('#back')[0].show();
    }

});